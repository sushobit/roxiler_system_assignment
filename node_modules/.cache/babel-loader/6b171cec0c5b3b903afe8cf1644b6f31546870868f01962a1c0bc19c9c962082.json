{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\myreactprojects\\\\roxiler_system\\\\src\\\\components\\\\TransactionsBarChart\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../global\";\nimport \"./index.css\";\nimport { XAxis, YAxis } from \"recharts\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true\n    }\n  }\n};\nconst BarChart = props => {\n  _s();\n  const {\n    barChartData,\n    month\n  } = props;\n  useEffect(() => {\n    async function fetchBarChartData() {\n      try {\n        const response = await axios.get(`${API}/bar-chart/${month}`);\n        console.log(response.data.result);\n\n        // Set state variables directly from the response\n        setBarChartData(response.data.result);\n        setLab(Object.keys(response.data.result));\n        setData(Object.values(response.data.result));\n        console.log(lab);\n        console.log(barChartData);\n      } catch (error) {\n        console.error(\"Error fetching bar chart data\", error);\n      }\n    }\n    fetchBarChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barchart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bar Chart Stats -\", \" \", month.displayText === \"Select Month\" ? \"Overall\" : month.displayText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 900,\n        height: 400,\n        data: barChartData.barChartData,\n        margin: {\n          top: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#6ce5e8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["useState","useEffect","axios","API","XAxis","YAxis","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","BarChart","props","_s","barChartData","month","fetchBarChartData","response","get","console","log","data","result","setBarChartData","setLab","Object","keys","setData","values","lab","error","children","className","displayText","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Downloads/myreactprojects/roxiler_system/src/components/TransactionsBarChart/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../../global\";\r\nimport \"./index.css\";\r\nimport {  XAxis, YAxis } from \"recharts\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst BarChart = (props) => {\r\n  \r\n  const { barChartData, month } = props;\r\n\r\n  useEffect(() => {\r\n    async function fetchBarChartData() {\r\n      try {\r\n        const response = await axios.get(`${API}/bar-chart/${month}`);\r\n        console.log(response.data.result);\r\n\r\n        // Set state variables directly from the response\r\n        setBarChartData(response.data.result);\r\n        setLab(Object.keys(response.data.result));\r\n        setData(Object.values(response.data.result));\r\n\r\n        console.log(lab);\r\n        console.log(barChartData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching bar chart data\", error);\r\n      }\r\n    }\r\n\r\n    fetchBarChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"barchart-container\">\r\n      <h1>\r\n        Bar Chart Stats -{\" \"}\r\n        {month.displayText === \"Select Month\" ? \"Overall\" : month.displayText}\r\n      </h1>\r\n      <BarChart\r\n        width={900}\r\n        height={400}\r\n        data={barChartData.barChartData}\r\n        margin={{\r\n          top: 5,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"range\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Bar dataKey=\"count\" fill=\"#6ce5e8\" />\r\n      </BarChart>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}