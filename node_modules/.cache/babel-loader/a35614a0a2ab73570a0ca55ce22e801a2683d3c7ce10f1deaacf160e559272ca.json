{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\myreactprojects\\\\roxiler_system\\\\src\\\\components\\\\TransactionsBarChart\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../global\";\nimport \"./index.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true\n    }\n  }\n};\nexport function BarChart() {\n  _s();\n  const [barChartData, setBarChartData] = useState({});\n  const [data, setData] = useState([]);\n  const [lab, setLab] = useState([]);\n  const [month, setMonth] = useState(\"March\");\n  useEffect(() => {\n    async function fetchBarChartData() {\n      try {\n        const response = await axios.get(`${API}/bar-chart/${month}`);\n        console.log(response.data.result);\n\n        // Set state variables directly from the response\n        setBarChartData(response.data.result);\n        setLab(Object.keys(response.data.result));\n        setData(Object.values(response.data.result));\n        console.log(lab);\n        console.log(barChartData);\n      } catch (error) {\n        console.error(\"Error fetching bar chart data\", error);\n      }\n    }\n    fetchBarChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardcontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"inputst\",\n          onChange: e => setMonth(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"January\",\n            children: \"January\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"February\",\n            children: \"February\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"March\",\n            defaultValue: true,\n            children: \"March\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"April\",\n            children: \"April\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"May\",\n            children: \"May\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"June\",\n            children: \"June\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"July\",\n            children: \"July\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"August\",\n            children: \"August\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"September\",\n            children: \"September\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"October\",\n            children: \"October\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"November\",\n            children: \"November\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"December\",\n            children: \"December\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bar Cart Stats-\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"month\",\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: {\n        labels: lab,\n        datasets: [{\n          label: \"Number of Items\",\n          data: data,\n          backgroundColor: \"blue\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"DaqnHjXY7QlaKII/SJ6oJUCxOjo=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["useState","useEffect","axios","API","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","BarChart","_s","barChartData","setBarChartData","data","setData","lab","setLab","month","setMonth","fetchBarChartData","response","get","console","log","result","Object","keys","values","error","children","className","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","labels","datasets","label","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Downloads/myreactprojects/roxiler_system/src/components/TransactionsBarChart/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../../global\";\r\nimport \"./index.css\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport function BarChart() {\r\n  const [barChartData, setBarChartData] = useState({});\r\n  const [data, setData] = useState([]);\r\n  const [lab, setLab] = useState([]);\r\n  const [month, setMonth] = useState(\"March\");\r\n\r\n  useEffect(() => {\r\n    async function fetchBarChartData() {\r\n      try {\r\n        const response = await axios.get(`${API}/bar-chart/${month}`);\r\n        console.log(response.data.result);\r\n\r\n        // Set state variables directly from the response\r\n        setBarChartData(response.data.result);\r\n        setLab(Object.keys(response.data.result));\r\n        setData(Object.values(response.data.result));\r\n\r\n        console.log(lab);\r\n        console.log(barChartData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching bar chart data\", error);\r\n      }\r\n    }\r\n\r\n    fetchBarChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cardcontainer\">\r\n        <div className=\"select\">\r\n          <select className=\"inputst\" onChange={(e) => setMonth(e.target.value)}>\r\n            {/* Use defaultValue instead of selected */}\r\n            <option value={\"January\"}>January</option>\r\n            <option value={\"February\"}>February</option>\r\n            <option value={\"March\"} defaultValue>\r\n              March\r\n            </option>\r\n            <option value={\"April\"}>April</option>\r\n            <option value={\"May\"}>May</option>\r\n            <option value={\"June\"}>June</option>\r\n            <option value={\"July\"}>July</option>\r\n            <option value={\"August\"}>August</option>\r\n            <option value={\"September\"}>September</option>\r\n            <option value={\"October\"}>October</option>\r\n            <option value={\"November\"}>November</option>\r\n            <option value={\"December\"}>December</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <h1>\r\n        Bar Cart Stats-<span className=\"month\">{month}</span>\r\n      </h1>\r\n\r\n      <Bar\r\n        options={options}\r\n        data={{\r\n          labels: lab,\r\n          datasets: [\r\n            {\r\n              label: \"Number of Items\",\r\n              data: data,\r\n              backgroundColor: \"blue\",\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}